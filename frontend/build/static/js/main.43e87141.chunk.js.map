{"version":3,"sources":["views/Home/Home.module.css","redux/reducers/index.js","views/layouts/NavBar.js","redux/actions/AuthActions.js","views/layouts/index.js","views/Auth/AuthGuard.js","views/Auth/LoginView/LoginForm.js","views/Auth/LoginView/index.js","views/Auth/RegisterView/RegisterForm.js","views/Auth/RegisterView/index.js","constants/index.js","views/Passenger/PassengerForm.js","views/Passenger/index.js","views/Flights/FlightsTable.js","views/Flights/index.js","views/Book/BookForm.js","views/Home/Home.js","views/Checkout/CheckoutForm.js","views/Checkout/index.js","Routes.js","App.js","index.js","redux/store/index.js"],"names":["module","exports","rootReducer","combineReducers","transaction","transactionReducer","useStyles","makeStyles","root","flexGrow","title","buttonStyle","fontSize","NavBar","classes","dispatch","useDispatch","Grid","container","style","backgroundColor","height","justify","item","marginTop","Link","component","RouterLink","to","variant","color","Button","className","size","onClick","type","localStorage","removeItem","theme","display","overflow","width","wrapper","flex","contentContainer","content","DashboardLayout","children","AuthGuard","toast","configure","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","RegisterView","states","formControl","minWidth","formControl2","cardHeader","textAlign","PassengerForm","props","history","useSelector","state","auth","useHistory","React","useState","firstName","setFirstname","lastName","setLastName","address","setAddress","city","setCity","setState","zip","setZip","country","setCountry","email","setEmail","phone","setPhone","useEffect","border","xs","push","spacing","map","passenger","Card","CardHeader","Divider","CardContent","TextField","InputLabelProps","shrink","label","name","fullWidth","value","onChange","event","target","Box","p","select","SelectProps","native","option","key","Passenger","Container","maxWidth","table","maxHeight","HeadTableRow","HeadTableCell","FlightsTable","checkedFlightDept","setCheckedFlightDept","checkedFlightReturning","setCheckedFlightReturning","tempFlight","going","returning","from","flights","date","deptTime","arrivalTime","stops","price","flight","Typography","textTransform","TableContainer","Table","TableHead","TableRow","hover","TableCell","TableBody","row","index","Checkbox","checked","Flights","BookForm","setType","fromAirport","setFromAirport","toAirport","setToAirport","deptDate","setDeptDate","returnDate","setReturnDate","numAdults","setNumAdults","numChildren","setNumChildren","margin","action","FormControl","RadioGroup","FormControlLabel","control","Radio","console","log","axios","post","then","res","catch","err","background","backgroundSize","backgroundRepeat","HomePage","top","aboutLink","CheckoutForm","nameOnCard","setNameOnCard","cardNumber","setCardNumber","expDate","setExpDate","securityCode","setSecurityCode","Checkout","Routes","exact","path","createBrowserHistory","createStyles","boxSizing","padding","html","body","App","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","composeWithDevTools","applyMiddleware","enhancers","composedEnhancers","compose","createStore","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43e87141.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutLink\":\"Home_aboutLink__1J1A9\",\"top\":\"Home_top__bMo7z\"};","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { authReducer } from \"./AuthReducer\";\nimport { transactionReducer } from \"./TransactionReducer\";\n\nconst rootReducer = combineReducers({\n  transaction: transactionReducer,\n});\nexport default rootReducer;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, makeStyles, Grid, Button } from \"@material-ui/core\";\n\nimport { logOut } from \"../../redux/actions/AuthActions\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  buttonStyle: {\n    fontSize: 18,\n  },\n}));\n\nfunction NavBar() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Grid\n      container\n      style={{\n        backgroundColor: \"#222\",\n        height: \"10vh\",\n      }}\n      justify=\"space-between\"\n    >\n      <Grid\n        item\n        style={{\n          marginTop: 10,\n        }}\n      >\n        <Link\n          component={RouterLink}\n          to=\"/app/home\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          <Button\n            style={{\n              color: \"white\",\n            }}\n            className={classes.buttonStyle}\n            size=\"large\"\n          >\n            Home\n          </Button>\n        </Link>\n        {/* <Link\n          component={RouterLink}\n          to=\"/app/about\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          <Button\n            style={{\n              color: \"white\",\n            }}\n            className={classes.buttonStyle}\n            size=\"large\"\n          >\n            About Us\n          </Button>\n        </Link> */}\n        <Link\n          component={RouterLink}\n          to=\"/app/book\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          <Button\n            style={{\n              color: \"white\",\n            }}\n            className={classes.buttonStyle}\n            size=\"large\"\n          >\n            Book\n          </Button>\n        </Link>\n      </Grid>\n      <Grid\n        item\n        style={{\n          marginTop: 10,\n        }}\n      >\n        {/* <Link\n          component={RouterLink}\n          to=\"/app/profiles\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          <Button\n            style={{\n              color: \"white\",\n            }}\n            className={classes.buttonStyle}\n            size=\"large\"\n          >\n            Profile\n          </Button>\n        </Link> */}\n        <Link\n          variant=\"body2\"\n          to=\"/login\"\n          component={RouterLink}\n          color=\"textSecondary\"\n        >\n          <Button\n            style={{\n              color: \"white\",\n            }}\n            className={classes.buttonStyle}\n            size=\"large\"\n            onClick={() => {\n              dispatch(logOut());\n              localStorage.removeItem(\"userEmail\");\n              localStorage.removeItem(\"userId\");\n              localStorage.removeItem(\"authtoken\");\n            }}\n          >\n            Log-Out\n          </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NavBar;\n","export const STORE_USER = \"STORE_USER\";\nexport const LOG_OUT = \"LOG_OUT\";\n\nexport const storeUSER = (userData) => {\n  return {\n    type: STORE_USER,\n    userData: userData,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: LOG_OUT,\n  };\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    width: \"100%\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n  },\n  contentContainer: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n  },\n  content: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n    overflow: \"hidden\",\n  },\n}));\n\nfunction DashboardLayout({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <NavBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction AuthGuard({ component: Component, render, ...rest }) {\n  const account = useSelector((state) => state.auth);\n\n  if (!account.user) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return render ? render({ ...rest }) : <Component {...rest} />;\n}\n\nexport default AuthGuard;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\n\nimport { storeUSER } from \"../../../redux/actions/AuthActions\";\ntoast.configure({\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nfunction LoginForm({ onSubmitSuccess }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const reduxAuth = useSelector((state) => state.auth);\n  const [email, setEmail] = React.useState();\n  const [password, setPassword] = React.useState();\n\n  return (\n    <Formik\n      initialValues={{\n        email: null,\n        password: null,\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Must be a valid email\")\n          .nullable()\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .nullable()\n          .required(\"Password is required\"),\n      })}\n    >\n      {({ errors, handleBlur, handleChange, touched, values }) => (\n        <>\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={(event) => {\n              handleChange(event);\n              setEmail(event.target.value);\n            }}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={(event) => {\n              handleChange(event);\n              setPassword(event.target.value);\n            }}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={() => {\n                axios({\n                  method: \"POST\",\n                  url: \"http://localhost:5000/auth/login\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  data: {\n                    email: email,\n                    password: password,\n                  },\n                })\n                  .then((res) => {\n                    //set token to be persistent in local storage\n                    if (res.data.success) {\n                      dispatch(storeUSER(res.data));\n                      localStorage.setItem(\"authtoken\", res.data.token);\n                      localStorage.setItem(\"userEmail\", res.data.email);\n                      localStorage.setItem(\"userId\", res.data.userId);\n                      //push to home page\n                      history.push(\"/app/home\");\n                    }\n                    if (res.data.error) {\n                      toast.error(res.data.error);\n                    }\n                  })\n                  .catch((err) => {\n                    toast.error(err)\n                    console.log(err);\n                  });\n              }}\n            >\n              Log In\n            </Button>\n          </Box>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport {\n  Avatar,\n  Button,\n  Box,\n  Container,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  colors,\n  makeStyles,\n} from \"@material-ui/core\";\nimport LoginForm from \"./LoginForm\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction LoginView() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box mb={8} display=\"flex\" alignItems=\"center\"></Box>\n      <Card\n        style={{\n          backgroundColor: \"lightgrey\",\n          border: \"2px solid black\",\n        }}\n      >\n        <CardContent>\n          <Typography variant=\"h2\" color=\"textPrimary\">\n            Login\n          </Typography>\n          <Box mt={2}></Box>\n          <Box mt={3}>\n            <LoginForm />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <Link\n            component={RouterLink}\n            to=\"/register\"\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            Create new account\n          </Link>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default LoginView;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { useHistory } from \"react-router\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\n\nimport {\n  Box,\n  Button,\n  TextField,\n  FormHelperText,\n  makeStyles,\n  Link,\n  setRef,\n} from \"@material-ui/core\";\n\ntoast.configure({\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nfunction RegisterForm() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [email, setEmail] = React.useState();\n  const [password, setPassword] = React.useState();\n\n  return (\n    <Formik\n      initialValues={{\n        email: null,\n        password: null,\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Must be a valid email\")\n          .nullable()\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .nullable()\n          .required(\"Password is required\"),\n      })}\n    >\n      {({ errors, handleBlur, handleChange, touched, values }) => (\n        <>\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={(event) => {\n              handleChange(event);\n              setEmail(event.target.value);\n            }}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={(event) => {\n              handleChange(event);\n              setPassword(event.target.value);\n            }}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={() => {\n                axios\n                  .post(\"http://localhost:5000/auth/register\", {\n                    email: email,\n                    password: password,\n                  })\n                  .then((res) => {\n                    if (res.data.success) {\n                      //push to home page\n                      history.push(\"/login\");\n                    }\n                    if (res.data.error) {\n                      toast.error(res.data.error);\n                    }\n                  })\n                  .catch((err) => console.log(err));\n              }}\n            >\n              Create\n            </Button>\n          </Box>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport {\n  Avatar,\n  Button,\n  Box,\n  Container,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  colors,\n  makeStyles,\n} from \"@material-ui/core\";\nimport RegisterForm from \"./RegisterForm\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction RegisterView() {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box mb={8} display=\"flex\" alignItems=\"center\"></Box>\n      <Card\n        style={{\n          backgroundColor: \"lightgrey\",\n          border: \"2px solid black\",\n        }}\n      >\n        <CardContent>\n          <Typography variant=\"h2\" color=\"textPrimary\">\n            Register\n          </Typography>\n          <Box mt={2}></Box>\n          <Box mt={3}>\n            <RegisterForm />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <Link\n            component={RouterLink}\n            to=\"/login\"\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            Back to Login\n          </Link>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default RegisterView;\n","export const states = [\n  \" \",\n  \"AL\",\n  \"AK\",\n  \"AZ\",\n  \"AR\",\n  \"CA\",\n  \"CO\",\n  \"CT\",\n  \"DE\",\n  \"FL\",\n  \"GA\",\n  \"HI\",\n  \"ID\",\n  \"IL\",\n  \"IN\",\n  \"IA\",\n  \"KS\",\n  \"KY\",\n  \"LA\",\n  \"ME\",\n  \"MD\",\n  \"MA\",\n  \"MI\",\n  \"MN\",\n  \"MS\",\n  \"MO\",\n  \"MT\",\n  \"NE\",\n  \"NV\",\n  \"NH\",\n  \"NJ\",\n  \"NM\",\n  \"NY\",\n  \"NC\",\n  \"ND\",\n  \"OH\",\n  \"OK\",\n  \"OR\",\n  \"PA\",\n  \"RI\",\n  \"SC\",\n  \"SD\",\n  \"TN\",\n  \"TX\",\n  \"UT\",\n  \"VT\",\n  \"VA\",\n  \"WA\",\n  \"WV\",\n  \"WI\",\n  \"WY\",\n];\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  TextField,\n  Box,\n  Button,\n  Grid,\n  makeStyles,\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  OutlinedInput,\n} from \"@material-ui/core\";\n\nimport { states } from \"../../constants/index\";\ntoast.configure({\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n\n  formControl: {\n    minWidth: 160,\n  },\n  formControl2: {\n    width: \"100%\",\n  },\n  cardHeader: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction PassengerForm(props) {\n  const classes = useStyles();\n  const reduxAuth = useSelector((state) => state.auth);\n  const history = useHistory();\n\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastName] = React.useState();\n  const [address, setAddress] = React.useState();\n  const [city, setCity] = React.useState();\n  const [state, setState] = React.useState();\n  const [zip, setZip] = React.useState();\n  const [country, setCountry] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [phone, setPhone] = React.useState();\n\n  React.useEffect(() => {}, []);\n\n  return (\n    <Grid container\n    justify=\"center\"\n    style={{ border: \"5px solid red\" }}\n    \n    >\n      <Grid\n        item\n        container\n        style={{ border: \"5px solid blue\" }}\n        justify=\"flex-end\"\n        xs={12}\n      >\n        <Button\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          onClick={() => {\n            history.push(\"/app/checkout\");\n          }}\n        >\n          Submit\n        </Button>\n      </Grid>\n      <Grid\n        container\n        spacing={1}\n        style={{ border: \"5px solid blue\" }}\n        justify=\"center\"\n        item\n        xs={12}\n      >\n        {[1, 2, 3, 4, 5].map((passenger) => (\n          <Grid item xs={4}>\n            <Card\n              style={{\n                marginTop: \"2vh\",\n                backgroundColor: \"lightgrey\",\n                border: \"2px solid black\",\n              }}\n            >\n              <CardHeader\n                className={classes.cardHeader}\n                title={`Passenger ${passenger} Info`}\n              />\n              <Divider />\n              <CardContent>\n                <Grid container spacing={1}>\n                  <Grid item xs={6}>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"First Name\"\n                      name=\"first_name\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={firstName}\n                      onChange={(event) => {\n                        setFirstname(event.target.value);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"Last Name\"\n                      name=\"last_name\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={lastName}\n                      onChange={(event) => {\n                        setLastName(event.target.value);\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Box p={1} />\n                <Grid container spacing={1}>\n                  <Grid item xs>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"Address\"\n                      name=\"address\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={address}\n                      onChange={(event) => {\n                        setAddress(event.target.value);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"City\"\n                      name=\"city\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      onChange={(event) => {\n                        setCity(event.target.value);\n                      }}\n                      value={city}\n                    />\n                  </Grid>\n                </Grid>\n                <Box p={1} />\n\n                <Box p={1} />\n                <Grid container spacing={1}>\n                  <Grid item xs>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"Zip\"\n                      name=\"zip\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={zip}\n                      onChange={(event) => {\n                        setZip(event.target.value);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField\n                      select\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"State\"\n                      variant=\"outlined\"\n                      className={classes.formControl2}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      onChange={(event) => {\n                        setState(event.target.value);\n                      }}\n                      value={state}\n                    >\n                      {states.map((option) => (\n                        <option key={option} value={option}>\n                          {option}\n                        </option>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item xs>\n                    <TextField\n                      select\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"Country\"\n                      variant=\"outlined\"\n                      className={classes.formControl2}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      value={country}\n                      onChange={(event) => {\n                        setCountry(event.target.value);\n                      }}\n                    >\n                      {[\" \", \"USA\", \"MX\", \"CD\"].map((option) => (\n                        <option key={option} value={option}>\n                          {option}\n                        </option>\n                      ))}\n                    </TextField>\n                  </Grid>\n                </Grid>\n                <Box p={1} />\n                <Grid container spacing={1}>\n                  <Grid item xs>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"Email\"\n                      name=\"email\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={email}\n                      onChange={(event) => {\n                        setEmail(event.target.value);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <TextField\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      label=\"Phone\"\n                      name=\"phone\"\n                      fullWidth\n                      type=\"text\"\n                      variant=\"outlined\"\n                      value={phone}\n                      onChange={(event) => {\n                        setPhone(event.target.value);\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PassengerForm;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, makeStyles, Button, Container } from \"@material-ui/core\";\n\nimport PassengerForm from \"./PassengerForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nfunction Passenger(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [profileData, setProfileData] = React.useState({});\n  const [fuelQuoteData, setFuelQuoteData] = React.useState({});\n\n  return (\n    <Container maxWidth=\"xl\">\n      <PassengerForm />\n    </Container>\n  );\n}\n\nexport default Passenger;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router\";\n\nimport {\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  TableContainer,\n  Table,\n  Typography,\n  Grid,\n  Button,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles({\n  table: {\n    border: \"2px solid black\",\n    backgroundColor: \"lightgrey\",\n    maxHeight: 10,\n  },\n  HeadTableRow: {\n    backgroundColor: \"black\",\n  },\n  HeadTableCell: {\n    color: \"white\",\n  },\n});\n\ntoast.configure({\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\n\nexport default function FlightsTable() {\n  const classes = useStyles();\n  const [data, setData] = React.useState([]);\n  const [checkedFlightDept, setCheckedFlightDept] = React.useState();\n  const [checkedFlightReturning, setCheckedFlightReturning] = React.useState();\n  const [type, setType] = React.useState(\"round_trip\");\n\n  const history = useHistory();\n\n  const tempFlight =\n    type == \"one_way\"\n      ? [\n          {\n            going: true,\n            returning: false,\n            from: \"chicago\",\n            to: \"dallas\",\n            flights: [\n              {\n                date: \"11/26/2020\",\n                deptTime: \"4:10PM\",\n                arrivalTime: \"9:00PM\",\n                stops: \"NonStop\",\n                price: \"$100\",\n              },\n            ],\n          },\n        ]\n      : [\n          {\n            going: true,\n            returning: false,\n            from: \"chicago\",\n            to: \"dallas\",\n            flights: [\n              {\n                date: \"11/26/2020\",\n                deptTime: \"4:10PM\",\n                arrivalTime: \"9:00PM\",\n                stops: \"NonStop\",\n                price: \"$100\",\n              },\n            ],\n          },\n          {\n            going: false,\n            returning: true,\n            from: \"dallas\",\n            to: \"chicago\",\n            flights: [\n              {\n                date: \"11/26/2020\",\n                deptTime: \"4:10PM\",\n                arrivalTime: \"9:00PM\",\n                stops: \"NonStop\",\n                price: \"$100\",\n              },\n            ],\n          },\n        ];\n\n  React.useEffect(() => {}, []);\n\n  return (\n    <Grid container spacing={1} style={{ border: \"10px solid red\" }}>\n      {tempFlight.map((flight) => (\n        <Grid\n          container\n          xs={type == \"one_way\" ? 12 : 6}\n          spacing={1}\n          style={{ border: \"1px solid blue\" }}\n          item\n        >\n          <Grid container item xs={12}>\n            <Grid item xs={8}>\n              <Typography\n                variant=\"h6\"\n                style={{\n                  textTransform: \"uppercase\",\n                }}\n              >\n                {flight.going\n                  ? `GOING:  ${flight.from} -> ${flight.to}`\n                  : `RETURNING:  ${flight.from} -> ${flight.to}`}\n              </Typography>\n            </Grid>\n            <Grid item container justify=\"flex-end\" xs={4}>\n              {(type == \"one_way\" && checkedFlightDept) ||\n              (flight.returning &&\n                checkedFlightDept &&\n                checkedFlightReturning) ? (\n                <Button\n                  variant=\"contained\"\n                  onClick={() => {\n                    history.push(\"/app/passenger\");\n                  }}\n                  color=\"primary\"\n                >\n                  Continue\n                </Button>\n              ) : null}\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <TableContainer style={{ height: 500 }}>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow hover className={classes.HeadTableRow}>\n                    <TableCell className={classes.HeadTableCell}>\n                      Date\n                    </TableCell>\n                    <TableCell className={classes.HeadTableCell}>\n                      Depart Time\n                    </TableCell>\n                    <TableCell className={classes.HeadTableCell}>\n                      Arrival Time\n                    </TableCell>\n                    <TableCell className={classes.HeadTableCell}>\n                      Stops\n                    </TableCell>\n                    <TableCell className={classes.HeadTableCell}>\n                      Price\n                    </TableCell>\n                    <TableCell className={classes.HeadTableCell}></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {flight.flights.map((row, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{row.date}</TableCell>\n                      <TableCell>{row.deptTime}</TableCell>\n                      <TableCell>{row.arrivalTime}</TableCell>\n                      <TableCell>{row.stops}</TableCell>\n                      <TableCell>{row.price}</TableCell>\n                      <TableCell>\n                        <Checkbox\n                          size=\"small\"\n                          checked={\n                            flight.going\n                              ? checkedFlightDept\n                              : checkedFlightReturning\n                          }\n                          onChange={(event) => {\n                            flight.going\n                              ? setCheckedFlightDept(!checkedFlightDept)\n                              : setCheckedFlightReturning(\n                                  !checkedFlightReturning\n                                );\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\n\nimport FlightsTable from \"./FlightsTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nfunction Flights(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container >\n      <FlightsTable />\n    </Grid>\n  );\n}\n\nexport default Flights;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\n\nimport {\n  TextField,\n  Box,\n  Button,\n  Grid,\n  makeStyles,\n  Card,\n  CardHeader,\n  Divider,\n  Radio,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  CardContent,\n} from \"@material-ui/core\";\n\ntoast.configure({\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n\n  formControl: {\n    minWidth: 160,\n  },\n  formControl2: {\n    width: \"100%\",\n  },\n}));\n\nfunction BookForm(props) {\n  const classes = useStyles();\n  const [type, setType] = React.useState();\n  const [fromAirport, setFromAirport] = React.useState();\n  const [toAirport, setToAirport] = React.useState();\n  const [deptDate, setDeptDate] = React.useState();\n  const [returnDate, setReturnDate] = React.useState();\n  const [numAdults, setNumAdults] = React.useState();\n  const [numChildren, setNumChildren] = React.useState();\n  const history = useHistory();\n\n  React.useEffect(() => {}, []);\n\n  return (\n    <Card\n      style={{\n        margin: \"auto\",\n        marginTop: \"10vh\",\n        width: \"90%\",\n        backgroundColor: \"lightgrey\",\n        border: \"2px solid black\",\n      }}\n    >\n      <CardHeader\n        className={classes.cardHeader}\n        title=\"Select Flight\"\n        action={\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              value={type}\n              style={{\n                display: \"block\",\n              }}\n              onChange={(event) => {\n                setType(event.target.value);\n              }}\n            >\n              <FormControlLabel\n                value=\"round_trip\"\n                control={<Radio />}\n                label=\"Round Trip\"\n              />\n              <FormControlLabel\n                value=\"one_way\"\n                control={<Radio />}\n                label=\"One Way\"\n              />\n              <FormControlLabel\n                value=\"multi_city\"\n                control={<Radio />}\n                label=\"Multi City\"\n              />\n            </RadioGroup>\n          </FormControl>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <TextField\n              InputLabelProps={{\n                shrink: true,\n              }}\n              select\n              label=\"From\"\n              name=\"fromAirport\"\n              fullWidth\n              type=\"text\"\n              variant=\"outlined\"\n              SelectProps={{\n                native: true,\n              }}\n              onChange={(event) => {\n                setFromAirport(event.target.value);\n              }}\n              value={fromAirport}\n            >\n              {[\" \", \"HOU\"].map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option}\n                </option>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              InputLabelProps={{\n                shrink: true,\n              }}\n              select\n              label=\"To\"\n              name=\"toAirport\"\n              fullWidth\n              type=\"text\"\n              variant=\"outlined\"\n              SelectProps={{\n                native: true,\n              }}\n              onChange={(event) => {\n                setToAirport(event.target.value);\n              }}\n              value={toAirport}\n            >\n              {[\" \", \"JFK\"].map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option}\n                </option>\n              ))}\n            </TextField>\n          </Grid>\n        </Grid>\n        <Box p={1} />\n        <Grid container spacing={1}>\n          <Grid item xs={3}>\n            <TextField\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label=\"Departure\"\n              type=\"date\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setDeptDate(event.target.value);\n              }}\n              value={deptDate}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label=\"Return\"\n              type=\"date\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setReturnDate(event.target.value);\n              }}\n              value={returnDate}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <TextField\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label=\"Adults\"\n              type=\"number\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                setNumAdults(event.target.value);\n              }}\n              value={numAdults}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <TextField\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label=\"Children\"\n              type=\"number\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(event) => {\n                // if (numChildren <= 0 ) setNumChildren(0);\n\n                // console.log(numChildren)\n                setNumChildren(event.target.value);\n              }}\n              value={numChildren}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Button\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={() => {\n                console.log(\"children: \", numChildren);\n                console.log(\"adults: \", numAdults);\n                console.log(\"depDate: \", deptDate);\n                console.log(\"arrDate: \", returnDate);\n                console.log(\"fromAirport: \", fromAirport);\n                console.log(\"toAirport: \", toAirport);\n                console.log(\"type: \", type);\n\n                //make request to backend\n                axios\n                  .post(\"http://localhost:5000/book/create\", {\n                    type,\n                    fromAirport,\n                    toAirport,\n                    deptDate,\n                    returnDate,\n                    numAdults,\n                    numChildren,\n                  })\n                  .then((res) => {\n                    console.log(res);\n                  })\n                  .catch((err) => {\n                    console.log(err);\n                  });\n\n                history.push(\"/app/flights\");\n              }}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default BookForm;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport style from \"./Home.module.css\";\nimport { Grid, makeStyles, Typography, Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  background: {\n    background:\n      \"url(https://greasebook.com/blog/wp-content/uploads/2015/06/pumper-jobs-lined-up.jpg)\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    height: \"100vh\",\n  },\n}));\n\nfunction HomePage() {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.background}>\n      <section className={style.top}>\n        <div className=\"centered\">\n          Pioneering the petroleum industry with professional, cost effective\n          solutions{\" \"}\n        </div>\n        <Link component={RouterLink} to=\"/app/about\">\n          <Typography className={style.aboutLink}>LEARN MORE</Typography>\n        </Link>\n      </section>\n    </Grid>\n  );\n}\n\nexport default HomePage;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  TextField,\n  Box,\n  Button,\n  Grid,\n  makeStyles,\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  OutlinedInput,\n} from \"@material-ui/core\";\n\nimport { states } from \"../../constants/index\";\ntoast.configure({\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n\n  formControl: {\n    minWidth: 160,\n  },\n  formControl2: {\n    width: \"100%\",\n  },\n  cardHeader: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction CheckoutForm(props) {\n  const classes = useStyles();\n  const reduxAuth = useSelector((state) => state.auth);\n\n  const [nameOnCard, setNameOnCard] = React.useState();\n  const [cardNumber, setCardNumber] = React.useState();\n  const [expDate, setExpDate] = React.useState();\n  const [securityCode, setSecurityCode] = React.useState();\n\n  const [firstName, setFirstname] = React.useState();\n  const [lastName, setLastName] = React.useState();\n  const [address, setAddress] = React.useState();\n  const [city, setCity] = React.useState();\n  const [state, setState] = React.useState();\n  const [zip, setZip] = React.useState();\n  const [country, setCountry] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [phone, setPhone] = React.useState();\n  React.useEffect(() => {}, []);\n\n  return (\n    <Grid container>\n      <Grid container item xs={6}>\n        <Card\n          style={{\n            margin: \"auto\",\n            marginTop: \"2vh\",\n            width: \"90%\",\n            backgroundColor: \"lightgrey\",\n            border: \"2px solid black\",\n          }}\n        >\n          <CardHeader className={classes.cardHeader} title=\"Customer Info\" />\n          <Divider />\n          <CardContent>\n            <Grid container spacing={1}>\n              <Grid item xs={6}>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={firstName}\n                  onChange={(event) => {\n                    setFirstname(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={lastName}\n                  onChange={(event) => {\n                    setLastName(event.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Address\"\n                  name=\"address\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={address}\n                  onChange={(event) => {\n                    setAddress(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"City\"\n                  name=\"city\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  onChange={(event) => {\n                    setCity(event.target.value);\n                  }}\n                  value={city}\n                />\n              </Grid>\n            </Grid>\n            <Box p={1} />\n\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Zip\"\n                  name=\"zip\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={zip}\n                  onChange={(event) => {\n                    setZip(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"State\"\n                  variant=\"outlined\"\n                  className={classes.formControl2}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChange={(event) => {\n                    setState(event.target.value);\n                  }}\n                  value={state}\n                >\n                  {states.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Country\"\n                  variant=\"outlined\"\n                  className={classes.formControl2}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  value={country}\n                  onChange={(event) => {\n                    setCountry(event.target.value);\n                  }}\n                >\n                  {[\" \", \"USA\", \"MX\", \"CD\"].map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Email\"\n                  name=\"email\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={email}\n                  onChange={(event) => {\n                    setEmail(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Phone\"\n                  name=\"phone\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={phone}\n                  onChange={(event) => {\n                    setPhone(event.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n      {/* *************************************\n\n*/}\n      <Grid container item xs={6}>\n        <Card\n          style={{\n            margin: \"auto\",\n            marginTop: \"2vh\",\n            width: \"90%\",\n            backgroundColor: \"lightgrey\",\n            border: \"2px solid black\",\n          }}\n        >\n          <CardHeader className={classes.cardHeader} title=\"Checkout\" />\n          <Divider />\n          <CardContent>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Name On Card\"\n                  name=\"name_on_card\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={nameOnCard}\n                  onChange={(event) => {\n                    setNameOnCard(event.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Card Number\"\n                  name=\"card_number\"\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  value={cardNumber}\n                  onChange={(event) => {\n                    setCardNumber(event.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Box p={1} />\n            <Grid container spacing={1}>\n              <Grid item xs>\n                <TextField\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Exp Data\"\n                  name=\"zip\"\n                  fullWidth\n                  type=\"date\"\n                  variant=\"outlined\"\n                  value={expDate}\n                  onChange={(event) => {\n                    setExpDate(event.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  label=\"Security Code\"\n                  variant=\"outlined\"\n                  className={classes.formControl2}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChange={(event) => {\n                    setSecurityCode(event.target.value);\n                  }}\n                  value={securityCode}\n                />\n              </Grid>\n            </Grid>\n\n            <Box p={1} />\n            <Grid container justify=\"center\">\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default CheckoutForm;\n","// @ts-nocheck\n/* eslint-disable max-len */\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, makeStyles, Button } from \"@material-ui/core\";\n\nimport CheckoutForm from \"./CheckoutForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nfunction Checkout(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <CheckoutForm />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Checkout;\n\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Layout from \"./views/layouts\";\nimport AuthGuard from \"./views/Auth/AuthGuard\";\nimport LoginView from \"./views/Auth/LoginView\";\nimport RegisterView from \"./views/Auth/RegisterView\";\nimport PassengerForm from \"./views/Passenger\";\nimport FlightsTable from \"./views/Flights\";\nimport BookForm from \"./views/Book/BookForm\";\nimport HomePage from \"./views/Home/Home\";\nimport CheckoutForm from \"./views/Checkout\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/app\" />\n      <Layout>\n        <Switch>\n          <Redirect exact from=\"/app\" to=\"/app/home\" />\n          <Route exact path=\"/app/home\" component={HomePage} />\n          <Route exact path=\"/app/checkout\" component={CheckoutForm} />\n          <Route exact path=\"/app/flights\" component={FlightsTable} />\n          <Route exact path=\"/app/passenger\" component={PassengerForm} />\n          <Route exact path=\"/app/book\" component={BookForm} />\n        </Switch>\n      </Layout>\n\n      <Redirect to=\"/\" />\n\n      {/* <Redirect exact from=\"/\" to=\"/login\" /> */}\n      {/* <Route exact path=\"/login\" component={LoginView} />\n      <Route exact path=\"/register\" component={RegisterView} /> */}\n      {/* AUTH  GUARD\n      <AuthGuard\n        path=\"/app\"\n        render={(props) => (\n          <Layout {...props}>\n            <Switch>\n              <Redirect exact from=\"/app\" to=\"/app/home\" />\n              <Route exact path=\"/app/home\" component={HomePage} />\n              <Route exact path=\"/app/about\" component={CheckoutForm} />\n              <Route exact path=\"/app/history\" component={FlightsTable} />\n              <Route exact path=\"/app/profiles\" component={PassengerForm} />\n              <Route exact path=\"/app/fuelquote\" component={BookForm} />\n            </Switch>\n          </Layout>\n        )}\n      /> */}\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { createStyles, makeStyles } from \"@material-ui/core\";\nimport Routes from \"./Routes\";\n\nconst history = createBrowserHistory();\nconst useStyles = makeStyles(() =>\n  createStyles({\n    \"@global\": {\n      \"*\": {\n        boxSizing: \"border-box\",\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        \"-webkit-font-smoothing\": \"antialiased\",\n        \"-moz-osx-font-smoothing\": \"grayscale\",\n        height: \"100%\",\n        width: \"100%\",\n      },\n      body: {\n        height: \"100%\",\n        width: \"100%\",\n      },\n      \"#root\": {\n        height: \"100%\",\n        width: \"100%\",\n      },\n    },\n  })\n);\n\nfunction App() {\n  useStyles();\n\n  return (\n    <Router history={history}>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./redux/store\";\nimport App from \"./App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","/* eslint-disable import/prefer-default-export */\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers/index\";\n\nexport function configureStore(preloadedState = {}) {\n  const middlewares = [thunkMiddleware];\n\n  const middlewareEnhancer = composeWithDevTools(\n    applyMiddleware(...middlewares)\n  );\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n"],"sourceRoot":""}